{"version":3,"sources":["components/Filters/FilterItem.js","components/Filters/FilterSelect.js","components/Filters/Checkbox.js","components/Filters/PageButtons.js","components/Filters/Filters.js","components/Movies/MovieItem.js","api/api.js","components/Movies/MoviesList.js","components/App.js","index.js"],"names":["FilterItem","this","props","filterItems","map","item","react_default","a","createElement","key","id","value","title","Component","FilterSelect","name","handleSelect","className","htmlFor","onChange","FilterItem_FilterItem","Checkbox","genres","addGenre","type","PageButtons","page","total_pages","changePage","Fragment","disabled","onClick","Filters","state","filterYear","_this$props","_this$props$filters","filters","sort_by","year","resetFilters","_this$state","Filters_FilterSelect","Filters_PageButtons","Filters_Checkbox","React","MovieItem","poster","backdrop_path","poster_path","style","width","src","concat","alt","vote_average","API_URL","API_KEY_3","MovieList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changedSortBy","filter","arguments","length","undefined","currentTotalPages","genre","link","fetch","then","response","json","data","setState","movies","results","prevProps","movie","MovieItem_MovieItem","initialState","App","e","target","prevState","objectSpread","defineProperty","getGenres","toggleGenre","array","index","findIndex","el","toConsumableArray","slice","arr","includes","Filters_Filters","MoviesList_MovieList","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.c82373fa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class FilterItem extends Component {\r\n  render() {\r\n    const { filterItems } = this.props;\r\n    return filterItems.map(item => (\r\n      <option key={item.id} value={item.value}>\r\n        {item.title}\r\n      </option>\r\n    ));\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport FilterItem from \"./FilterItem\";\r\n\r\nconst FilterSelect = props => {\r\n  const { name, id, value, handleSelect, filterItems } = props;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={id}>Сортировать по:</label>\r\n      <select\r\n        name={name}\r\n        className=\"form-control\"\r\n        id={id}\r\n        value={value}\r\n        onChange={handleSelect}\r\n      >\r\n        <FilterItem filterItems={filterItems} />\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterSelect;\r\n","import React from \"react\";\r\n\r\nconst Checkbox = props => {\r\n  const { genres, addGenre } = props;\r\n  return (\r\n    <div className=\"btn-group row\">\r\n      {genres.map(item => (\r\n        <label key={item.id} className=\"col-12\">\r\n          {item.name}:\r\n          <input name={item.id} type=\"checkbox\" onChange={addGenre} />\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React from \"react\";\r\n\r\nconst PageButtons = props => {\r\n  const { page, total_pages, changePage } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"btn-group col-12\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          disabled={page === 1}\r\n          onClick={() => {\r\n            changePage(page - 1);\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          disabled={page >= total_pages}\r\n          onClick={() => {\r\n            changePage(page + 1);\r\n          }}\r\n        >\r\n          Forward\r\n        </button>\r\n      </div>\r\n      <p>\r\n        Current page: <strong>{page}</strong> from total pages:{\" \"}\r\n        <strong>{total_pages}</strong>\r\n      </p>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PageButtons;\r\n","import React from \"react\";\r\nimport FilterSelect from \"./FilterSelect\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport PageButtons from \"./PageButtons\";\r\n\r\nexport default class Filters extends React.Component {\r\n  state = {\r\n    filterItems: [\r\n      { id: 1, title: \"Популярные по убыванию\", value: \"popularity.desc\" },\r\n      { id: 2, title: \"Популярные по возростанию\", value: \"popularity.asc\" },\r\n      { id: 3, title: \"Рейтинг по убыванию\", value: \"vote_average.desc\" },\r\n      { id: 4, title: \"Рейтинг по возростанию\", value: \"vote_average.asc\" }\r\n    ],\r\n    filterYear: [\r\n      { id: 1, title: 2019, value: 2019 },\r\n      { id: 2, title: 2018, value: 2018 },\r\n      { id: 3, title: 2017, value: 2017 },\r\n      { id: 4, title: 2016, value: 2016 }\r\n    ]\r\n  };\r\n  render() {\r\n    const {\r\n      filters: { sort_by, year },\r\n      page,\r\n      total_pages,\r\n      genres,\r\n      handleSelect,\r\n      changePage,\r\n      resetFilters,\r\n      addGenre\r\n    } = this.props;\r\n    const { filterItems, filterYear } = this.state;\r\n    return (\r\n      <form className=\"mb-3\">\r\n        <FilterSelect\r\n          name=\"sort_by\"\r\n          id=\"sort_by\"\r\n          value={sort_by}\r\n          handleSelect={handleSelect}\r\n          filterItems={filterItems}\r\n        />\r\n        <FilterSelect\r\n          name=\"year\"\r\n          id=\"year\"\r\n          value={year}\r\n          handleSelect={handleSelect}\r\n          filterItems={filterYear}\r\n        />\r\n        <PageButtons\r\n          page={page}\r\n          total_pages={total_pages}\r\n          changePage={changePage}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary col-12\"\r\n          onClick={resetFilters}\r\n        >\r\n          Reset filters\r\n        </button>\r\n        <Checkbox genres={genres} addGenre={addGenre} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class MovieItem extends React.Component {\r\n  render() {\r\n    const { item } = this.props;\r\n    const poster = item.backdrop_path || item.poster_path;\r\n    const defaultPoster = \"./images/default-movie-poster.jpg\";\r\n    return (\r\n      <div className=\"card\" style={{ width: \"100%\" }}>\r\n        <img\r\n          className=\"card-img-top card-img--height\"\r\n          src={\r\n            poster ? `https://image.tmdb.org/t/p/w500${poster}` : defaultPoster\r\n          }\r\n          alt=\"poster\"\r\n        />\r\n        <div className=\"card-body\">\r\n          <h6 className=\"card-title\">{item.title}</h6>\r\n          <div className=\"card-text\">Рейтинг: {item.vote_average}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const API_URL = \"https://api.themoviedb.org/3\";\n\nexport const API_KEY_3 = \"b1a938ee7f324798663cd0727c5783ee\";\n\nexport const API_KEY_4 =\n  \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMWE5MzhlZTdmMzI0Nzk4NjYzY2QwNzI3YzU3ODNlZSIsInN1YiI6IjVkNjNmMzQ1YmM4YWJjNjA1ZDI1MDY5ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0AmtMmTcqQ9lyLuhMfOXywHfhxLQ8NH110DBfcawH4c\";\n","import React, { Component } from \"react\";\r\nimport MovieItem from \"./MovieItem\";\r\nimport { API_URL, API_KEY_3 } from \"../../api/api\";\r\n\r\nexport default class MovieList extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      movies: []\r\n    };\r\n  }\r\n\r\n  changedSortBy = (filter, page = 1, currentTotalPages, genre = \"\") => {\r\n    const { sort_by, year } = filter;\r\n\r\n    const link = `${API_URL}/discover/movie?api_key=${API_KEY_3}&language=ru-RU&sort_by=${sort_by}&page=${page}&primary_release_year=${year}&with_genres=${genre}`;\r\n    fetch(link)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        currentTotalPages(data.total_pages);\r\n        this.setState({\r\n          movies: data.results\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.changedSortBy(\r\n      this.props.filters,\r\n      this.props.page,\r\n      this.props.currentTotalPages,\r\n      this.props.genre\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.filters.sort_by !== this.props.filters.sort_by ||\r\n      prevProps.page !== this.props.page ||\r\n      prevProps.filters.year !== this.props.filters.year ||\r\n      prevProps.genre !== this.props.genre\r\n    ) {\r\n      this.changedSortBy(\r\n        this.props.filters,\r\n        this.props.page,\r\n        this.props.currentTotalPages,\r\n        this.props.genre\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n    return (\r\n      <div className=\"row\">\r\n        {movies.map(movie => {\r\n          return (\r\n            <div key={movie.id} className=\"col-6 mb-4\">\r\n              <MovieItem item={movie} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Filters from \"./Filters/Filters\";\r\nimport MoviesList from \"./Movies/MoviesList\";\r\nimport { API_URL, API_KEY_3 } from \"../api/api\";\r\n\r\nconst initialState = {\r\n  filters: {\r\n    sort_by: \"popularity.desc\",\r\n    year: 2019\r\n  },\r\n  page: 1,\r\n  genres: [],\r\n  genre: \"\"\r\n};\r\nexport default class App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      ...initialState,\r\n      total_pages: \"\"\r\n    };\r\n  }\r\n\r\n  handleSelect = e => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      filters: {\r\n        ...prevState.filters,\r\n        [name]: value\r\n      },\r\n      page: 1\r\n    }));\r\n  };\r\n\r\n  changePage = page => {\r\n    this.setState({\r\n      ...this.state,\r\n      page\r\n    });\r\n  };\r\n\r\n  currentTotalPages = e => {\r\n    this.setState({\r\n      ...this.state,\r\n      total_pages: e\r\n    });\r\n  };\r\n\r\n  resetFilters = e => {\r\n    this.getGenres();\r\n    this.setState({\r\n      ...initialState\r\n    });\r\n  };\r\n\r\n  getGenres = () => {\r\n    const link = `${API_URL}/genre/movie/list?api_key=${API_KEY_3}&language=ru-Ru`;\r\n    fetch(link)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          genres: data.genres\r\n        });\r\n      });\r\n  };\r\n\r\n  toggleGenre = (array, item) => {\r\n    const index = array.findIndex(el => el === item);\r\n    const newArr = [...array.slice(0, index), ...array.slice(index + 1)];\r\n\r\n    return newArr;\r\n  };\r\n\r\n  addGenre = e => {\r\n    const id = e.target.name;\r\n    let arr = [...this.state.genre];\r\n    if (this.state.genre.includes(id)) {\r\n      arr = this.toggleGenre(arr, id);\r\n    } else {\r\n      arr = [...arr, id];\r\n    }\r\n    this.setState(() => ({\r\n      ...this.state,\r\n      page: 1,\r\n      genre: arr\r\n    }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGenres();\r\n  }\r\n\r\n  render() {\r\n    const { filters, page, total_pages, genres, genre } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row mt-4\">\r\n          <div className=\"col-4\">\r\n            <div className=\"card\" style={{ width: \"100%\" }}>\r\n              <div className=\"card-body\">\r\n                <h3>Фильтры:</h3>\r\n                <Filters\r\n                  filters={filters}\r\n                  handleSelect={this.handleSelect}\r\n                  page={page}\r\n                  total_pages={total_pages}\r\n                  genres={genres}\r\n                  genre={genre}\r\n                  changePage={this.changePage}\r\n                  resetFilters={this.resetFilters}\r\n                  addGenre={this.addGenre}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-8\">\r\n            <MoviesList\r\n              filters={filters}\r\n              page={page}\r\n              total_pages={total_pages}\r\n              genre={genre}\r\n              currentTotalPages={this.currentTotalPages}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./stylesheets/index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}