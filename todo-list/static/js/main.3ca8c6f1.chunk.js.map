{"version":3,"sources":["Components/AppHeader/index.js","Components/AppHeader/AppHeader.js","Components/AddForm/index.js","Components/AddForm/AddForm.js","Components/ItemStatusFilter/ItemStatusFilter.js","Components/ItemStatusFilter/index.js","Components/TodoListItem/index.js","Components/TodoListItem/TodoListItem.js","Components/TodoList/index.js","Components/TodoList/TodoList.js","Components/SearchField/index.js","Components/SearchField/SearchField.js","Components/App.js","index.js"],"names":["AppHeader","toDo","done","className","AddForm","state","text","error","onTextChange","e","setState","target","value","onSubmit","preventDefault","props","addItem","this","type","onChange","placeholder","Component","filterButton","name","ItemStatusFilter","filter","onFilter","buttons","map","key","onClick","TodoListItem","deleteItem","onToggleDone","onToggleImportant","important","TodoList","todoData","item","id","itemsProps","SearchField","searchText","onSearcTextChange","onSearch","App","maxCount","createTodoItem","search","index","findIndex","el","slice","newItem","onToggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","doneQuantity","todoQuantity","visibleItems","searchItems","filterItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ca8c6f1.chunk.js","sourcesContent":["import AppHeader from './AppHeader';\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport './appHeader.css';\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Todo List</h1>\r\n      <h2>\r\n        {toDo} more to do; {done} done\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import AddForm from './AddForm';\r\n\r\nexport default AddForm;\r\n","import React, { Component } from 'react';\r\nimport './addForm.css';\r\n\r\nexport default class AddForm extends Component {\r\n  state = {\r\n    text: '',\r\n    error: '',\r\n  };\r\n\r\n  onTextChange = e => {\r\n    this.setState({\r\n      text: e.target.value,\r\n      error: '',\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { text } = this.state;\r\n    if (text) {\r\n      this.setState({ text: '' });\r\n      const ch = this.props.addItem || (() => {});\r\n      ch(text);\r\n    } else {\r\n      this.setState({\r\n        error: 'Ð¡heck data entered in the field',\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, error } = this.state;\r\n    return (\r\n      <div>\r\n        <form className=\"bottom-panel d-flex\" onSubmit={this.onSubmit}>\r\n          <input\r\n            className=\"form-control new-todo-text\"\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={this.onTextChange}\r\n            placeholder=\"Write your task\"\r\n          />\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary\">\r\n            Add item\r\n          </button>\r\n        </form>\r\n        {error ? <span className=\"bottom-panel__error\">{error}</span> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst filterButton = [\r\n  { name: 'all', text: 'All' },\r\n  { name: 'active', text: 'Active' },\r\n  { name: 'done', text: 'Done' },\r\n];\r\n\r\nconst ItemStatusFilter = ({ filter, onFilter = () => {} }) => {\r\n  const buttons = filterButton.map(({ name, text }) => {\r\n    const isActive = name === filter;\r\n    const className =\r\n      'btn ' + (isActive ? 'btn-info' : 'btn-outline-secondary');\r\n\r\n    return (\r\n      <button key={name} onClick={() => onFilter(name)} className={className}>\r\n        {text}\r\n      </button>\r\n    );\r\n  });\r\n\r\n  return <div className=\"btn-group\">{buttons}</div>;\r\n};\r\n\r\nexport default ItemStatusFilter;\r\n","import ItemStatusFilter from './ItemStatusFilter';\r\n\r\nexport default ItemStatusFilter;\r\n","import TodoListItem from './TodoListItem';\r\n\r\nexport default TodoListItem;\r\n","import React from 'react';\r\nimport './todoListItem.css';\r\n\r\nconst TodoListItem = ({\r\n  text,\r\n  deleteItem,\r\n  onToggleDone,\r\n  onToggleImportant,\r\n  important,\r\n  done,\r\n}) => {\r\n  let className = 'todo-list-item';\r\n  if (done) {\r\n    className += ' done';\r\n  }\r\n  if (important) {\r\n    className += ' important';\r\n  }\r\n\r\n  return (\r\n    <span className={className}>\r\n      <span className=\"todo-list-item-text\" onClick={onToggleDone}>\r\n        {text}\r\n      </span>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-success btn-sm float-right\"\r\n        onClick={onToggleImportant}\r\n      >\r\n        <i className=\"fa fa-exclamation\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-danger btn-sm float-right\"\r\n        onClick={deleteItem}\r\n      >\r\n        <i className=\"fa fa-trash-o\" />\r\n      </button>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import TodoList from './TodoList';\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport TodoListItem from '../TodoListItem';\r\nimport './todoList.css';\r\n\r\nconst TodoList = ({\r\n  todoData,\r\n  deleteItem,\r\n  onToggleDone,\r\n  onToggleImportant,\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group todo-list\">\r\n      {todoData.map(item => {\r\n        const { id, ...itemsProps } = item;\r\n        return (\r\n          <li key={id} className=\"list-group-item\">\r\n            <TodoListItem\r\n              {...itemsProps}\r\n              deleteItem={() => deleteItem(id)}\r\n              onToggleImportant={() => onToggleImportant(id)}\r\n              onToggleDone={() => onToggleDone(id)}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import SearchField from './SearchField';\r\n\r\nexport default SearchField;\r\n","import React, { Component } from 'react';\r\nimport './searchField.css';\r\n\r\nexport default class SearchField extends Component {\r\n  state = {\r\n    searchText: '',\r\n  };\r\n\r\n  onSearcTextChange = e => {\r\n    const { onSearch = () => {} } = this.props;\r\n    this.setState({\r\n      searchText: e.target.value,\r\n    });\r\n\r\n    onSearch(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control search-input\"\r\n        placeholder=\"Write text for search\"\r\n        value={this.state.searchText}\r\n        onChange={this.onSearcTextChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport AppHeader from './AppHeader';\r\nimport AddForm from './AddForm';\r\nimport ItemStatusFilter from './ItemStatusFilter';\r\nimport TodoList from './TodoList';\r\nimport SearchField from './SearchField';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n  maxCount = 1;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Wake Up'),\r\n      this.createTodoItem('Drink coffee'),\r\n      this.createTodoItem('Go to work'),\r\n    ],\r\n    search: '',\r\n    filter: 'all',\r\n  };\r\n\r\n  createTodoItem(text) {\r\n    return {\r\n      id: this.maxCount++,\r\n      text: text,\r\n      important: false,\r\n      done: false,\r\n    };\r\n  }\r\n\r\n  deleteItem = id => {\r\n    this.setState(({ todoData }) => {\r\n      const index = todoData.findIndex(el => el.id === id);\r\n\r\n      const newArr = [\r\n        ...todoData.slice(0, index),\r\n        ...todoData.slice(index + 1),\r\n      ];\r\n\r\n      return {\r\n        todoData: newArr,\r\n      };\r\n    });\r\n  };\r\n\r\n  addItem = text => {\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    this.setState(({ todoData }) => {\r\n      const newArr = [...todoData, newItem];\r\n\r\n      return {\r\n        todoData: newArr,\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleProperty(arr, id, propName) {\r\n    const index = arr.findIndex(el => el.id === id);\r\n    const oldItem = arr[index];\r\n    const newItem = {\r\n      ...oldItem,\r\n      [propName]: !oldItem[propName],\r\n    };\r\n\r\n    return [...arr.slice(0, index), newItem, ...arr.slice(index + 1)];\r\n  }\r\n\r\n  onToggleDone = id => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.onToggleProperty(todoData, id, 'done'),\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleImportant = id => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.onToggleProperty(todoData, id, 'important'),\r\n      };\r\n    });\r\n  };\r\n\r\n  onFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  onSearch = search => {\r\n    this.setState({ search });\r\n  };\r\n\r\n  filterItems(items, filter) {\r\n    if (filter === 'all') {\r\n      return items;\r\n    } else if (filter === 'active') {\r\n      return items.filter(item => !item.done);\r\n    } else if (filter === 'done') {\r\n      return items.filter(item => item.done);\r\n    }\r\n  }\r\n\r\n  searchItems(items, search) {\r\n    if (search.length === 0) {\r\n      return items;\r\n    }\r\n    return items.filter(item => {\r\n      return item.text.toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { todoData, search, filter } = this.state;\r\n    const doneQuantity = todoData.filter(el => el.done).length;\r\n    const todoQuantity = todoData.length - doneQuantity;\r\n    const visibleItems = this.searchItems(\r\n      this.filterItems(todoData, filter),\r\n      search\r\n    );\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoQuantity} done={doneQuantity} />\r\n        <div className=\"todo-panel d-flex\">\r\n          <SearchField onSearch={this.onSearch} />\r\n          <ItemStatusFilter filter={filter} onFilter={this.onFilter} />\r\n        </div>\r\n        <TodoList\r\n          todoData={visibleItems}\r\n          deleteItem={this.deleteItem}\r\n          onToggleDone={this.onToggleDone}\r\n          onToggleImportant={this.onToggleImportant}\r\n        />\r\n        <AddForm addItem={this.addItem} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}